---
- name: installing vsftpd package
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - vsftpd
    - libdb-utils

- name: "copying vsftpd systemd service file for {{ vsftpd_systemd_service_name }}"
  ansible.builtin.template:
    src: vsftpd.service.j2
    dest: /etc/systemd/system/vsftpd@{{ vsftpd_systemd_service_name }}.service
    mode: '664'
  when: vsftpd_systemd_service_name != 'vsftpd'

- name: "configuring systemd for {{ vsftpd_systemd_service_name }}"
  ansible.builtin.systemd:
    name: "vsftpd@{{ vsftpd_systemd_service_name }}"
    daemon_reload: true
    enabled: true
  when: vsftpd_systemd_service_name != 'vsftpd'

- name: configuring systemd for vsftpd
  ansible.builtin.systemd:
    name: vsftpd
    daemon_reload: true
    enabled: true
  when: vsftpd_systemd_service_name == 'vsftpd'

- name: configuring vsftpd instance
  ansible.builtin.template:
    src: vsftpd.conf.j2
    dest: /etc/vsftpd/vsftpd.conf
    owner: root
    group: root
    mode: 0660
  notify:
    - restarting vsftpd service
  when: vsftpd_systemd_service_name == 'vsftpd'

- name: "creating {{ vsftpd_systemd_service_name }} configuration directory"
  ansible.builtin.file:
    state: directory
    path: "/etc/vsftpd/{{ vsftpd_systemd_service_name }}/"
    mode: '775'
  when: vsftpd_systemd_service_name != 'vsftpd'

- name: "configuring {{ vsftpd_systemd_service_name }} instance"
  ansible.builtin.template:
    src: vsftpd.conf.j2
    dest: /etc/vsftpd/{{ vsftpd_systemd_service_name }}/vsftpd.conf
    owner: root
    group: root
    mode: 0750
  notify:
    - "restarting {{ vsftpd_systemd_service_name }} service"
  when: vsftpd_systemd_service_name != 'vsftpd'
