---
- name: creating default users config directory
  ansible.builtin.file:
    state: directory
    path: /etc/vsftpd/users.d/
    mode: '775'
  when: vsftpd_systemd_service_name == 'vsftpd'

- name: "creating {{ vsftpd_systemd_service_name }} users config directory"
  ansible.builtin.file:
    state: directory
    path: "/etc/vsftpd/{{ vsftpd_systemd_service_name }}/users.d/"
    mode: '775'
  when: vsftpd_systemd_service_name != 'vsftpd'

- name: creating default users config
  ansible.builtin.template:
    src: users_config.j2
    dest: "/etc/vsftpd/users.d/{{ item['username'] }}"
    mode: '644'
  with_items:
    - "{{ vsftpd_virt_users }}"
  when:
    - vsftpd_virt_users is defined
    - vsftpd_systemd_service_name == 'vsftpd'
  notify: restarting vsftpd service
  no_log: "{{ vsftpd_no_log }}"

- name: "creating {{ vsftpd_systemd_service_name }} users config"
  ansible.builtin.template:
    src: users_config.j2
    dest: "/etc/vsftpd/{{ vsftpd_systemd_service_name }}/ \
      users.d/{{ item['username'] }}"
    mode: '644'
  with_items:
    - "{{ vsftpd_virt_users }}"
  when:
    - vsftpd_virt_users is defined
    - vsftpd_systemd_service_name != 'vsftpd'
  notify: "restarting specific {{ vsftpd_systemd_service_name }} service"
  no_log: "{{ vsftpd_no_log }}"

- name: configuring pam for default vsftpd virtual users 1/2
  community.general.pamd:
    name: vsftpd
    new_type: account
    new_control: sufficient
    new_module_path: pam_userdb.so
    module_arguments: 'db=/etc/vsftpd/login'
    state: before
    type: session
    control: optional
    module_path: pam_keyinit.so
  when: vsftpd_systemd_service_name == 'vsftpd'

- name: configuring pam for default vsftpd virtual users 2/2
  community.general.pamd:
    name: vsftpd
    new_type: auth
    new_control: sufficient
    new_module_path: pam_userdb.so
    module_arguments: 'db=/etc/vsftpd/login'
    state: before
    type: account
    control: sufficient
    module_path: pam_userdb.so
  when: vsftpd_systemd_service_name == 'vsftpd'

- name: "configuring pam for {{ vsftpd_systemd_service_name }} \
vsftpd virtual users"
  ansible.builtin.template:
    src: vsftpd_pam.j2
    dest: "/etc/pam.d/{{ vsftpd_systemd_service_name }}"
    owner: root
    group: root
    mode: 0644
  when: vsftpd_systemd_service_name != 'vsftpd'

- name: adding virtual users to default database
  ansible.builtin.template:
    src: users_db.j2
    dest: /etc/vsftpd/login.txt
    owner: root
    group: root
    mode: 0600
  when: vsftpd_systemd_service_name == 'vsftpd'
  register: vsftpd_db_default

- name: "adding virtual users to {{ vsftpd_systemd_service_name }}"
  ansible.builtin.template:
    src: users_db.j2
    dest: "/etc/vsftpd/{{ vsftpd_systemd_service_name }}/login.txt"
    owner: root
    group: root
    mode: 0600
  when: vsftpd_systemd_service_name != 'vsftpd'
  register: vsftpd_db_custom

- name: generating default virtual users database
  ansible.builtin.command: db_load -T -t hash -f /etc/vsftpd/login.txt /etc/vsftpd/login.db
  when:
    - vsftpd_systemd_service_name == 'vsftpd'
    - vsftpd_db_default['changed']
  notify: restarting vsftpd service

- name: "generating {{ vsftpd_systemd_service_name }} virtual users database"
  ansible.builtin.command: "db_load -T -t hash \
  -f /etc/vsftpd/{{ vsftpd_systemd_service_name }}/login.txt \
  /etc/vsftpd/{{ vsftpd_systemd_service_name }}/login.db"
  when:
    - vsftpd_systemd_service_name != 'vsftpd'
    - vsftpd_db_custom['changed']
  notify: "restarting specific {{ vsftpd_systemd_service_name }} service"

- name: changing mode for default virtual users database
  ansible.builtin.file:
    state: file
    path: /etc/vsftpd/login.db
    owner: root
    group: root
    mode: 0600
  when: vsftpd_systemd_service_name == 'vsftpd'

- name: "changing mode for \
{{ vsftpd_systemd_service_name }} virtual users database"
  ansible.builtin.file:
    state: file
    path: "/etc/vsftpd/{{ vsftpd_systemd_service_name }}/login.db"
    owner: root
    group: root
    mode: 0600
  when: vsftpd_systemd_service_name != 'vsftpd'
